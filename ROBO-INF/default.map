<?xml version="1.0" encoding="utf-8"?>
<rocky version="4.0">
  <sensor type="Red" />
  <sensor type="Green" />
  <sensor type="Blue" />

  <gate type="AND" mnemonic="a" class="net.bluecow.robot.gate.AndGate" />
  <gate type="NOR" mnemonic="O" class="net.bluecow.robot.gate.NorGate" />
  <gate type="NOT" mnemonic="n" class="net.bluecow.robot.gate.NotGate" />
  <gate type="NAND" mnemonic="A" class="net.bluecow.robot.gate.NandGate" />
  <gate type="OR" mnemonic="o" class="net.bluecow.robot.gate.OrGate" />

  <square type="BLACK" mapchar=" " graphic="ROBO-INF/images/blacktile_glint.rsf">
  </square>
  <square type="MAGENTA" mapchar="M" graphic="ROBO-INF/images/magentatile.png">
    <activate-sensor type="Blue" />
    <activate-sensor type="Red" />
  </square>
  <square type="RED" mapchar="R" graphic="ROBO-INF/images/redtile.png">
    <activate-sensor type="Red" />
  </square>
  <square type="WHITE" mapchar="W" graphic="ROBO-INF/images/whitetile.png">
    <activate-sensor type="Blue" />
    <activate-sensor type="Red" />
    <activate-sensor type="Green" />
  </square>
  <square type="CYAN" mapchar="C" graphic="ROBO-INF/images/cyantile.png">
    <activate-sensor type="Blue" />
    <activate-sensor type="Green" />
  </square>
  <square type="YELLOW" mapchar="Y" graphic="ROBO-INF/images/yellowtile.png">
    <activate-sensor type="Red" />
    <activate-sensor type="Green" />
  </square>
  <square type="BLUE" mapchar="B" graphic="ROBO-INF/images/bluetile.png">
    <activate-sensor type="Blue" />
  </square>
  <square type="GREEN" mapchar="G" graphic="ROBO-INF/images/greentile.png">
    <activate-sensor type="Green" />
  </square>
  <square type="WALL" mapchar="X" graphic="ROBO-INF/images/wall.png">
    <attribute type="WALL" />
  </square>

  <level name="Green means go!" size-x="15" size-y="10">
  <description><![CDATA[
Welcome to Grod's world!
<p>
There are several pages of help available. To browse back and forth, use the buttons in the top right corner.
<p>
Click anywhere on this text to make it disappear, so you can get a better view of the playfield.  If you want to see the text again, just click on the playfield and it will come back.
<pb>
Look in the Circuit Editor window.
<p>
This is an output:
<img src="resource:///ROBO-INF/doc/output-inactive.png">. Grod has three outputs. They tell you what colour Grod is standing on.
<p>
An output can become active. When it is, it turns orange:
<img src="resource:///ROBO-INF/doc/output-active.png">.  The outputs in your circuit editor become active when Grod walks on certain colours of tiles.
<pb>
Try pressing the Start button and watch the outputs in the Circuit Editor.  Which one activates? Which ones stay inactive?
<p>
Now press the Reset button.  You can't make changes to your circuit while the level is in play.  That's what the "Locked" message in the circuit editor means. It's to remind you that your circuit is locked against changes.
<pb>
This is an input:
<img src="resource:///ROBO-INF/doc/input-inactive.png">.
An input is active when it is connected to an active output. When it is, it turns orange too:
<img src="resource:///ROBO-INF/doc/input-active.png">.
The inputs in your circuit editor control Grod's motors. When they are active, they make Grod move in a particular direction.
<pb>
You can connect inputs to outputs by dragging your mouse from one to the other.  Try it now.  Which connection can you make that will take Grod to the cake?
<p>
Once you have made your connection, press the Start button again.  If you made a mistake and want to try again, just press Reset.
  ]]></description>
    <grod id="grod" step-size="0.1" start-x="3.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="cake" loc-x="11" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXGGGGGGGGGXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="On the Diagonal" size-x="15" size-y="10">
  <description><![CDATA[
Ok, this one isn't much harder.  See if you can figure out the trick!
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="n" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Time to make a decision" size-x="15" size-y="10">
  <description><![CDATA[
Grod has to wake up and make a decision now.  No more mindless
wandering in the same direction all the time!
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXRRRRRRRRRXXX
XXXBXXXXXRXXXXX
XXXBXXXXXXXXXXX
XXXBBXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Time to make more decisions" size-x="15" size-y="10">
  <description><![CDATA[
Three colours, three directions.
<p>
Can you handle it?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="8" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXRRRRRRRRGXXX
XXXBXXXXRXXGXXX
XXXBXXXXXXXGXXX
XXXBBXXXXXXGXXX
XXXBXXXXXXXGXXX
XXXBXXXXXXGGXXX
XXXBXXXXXXXGXXX
XXXBXXXXXXXGXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Move right, OR else!" size-x="15" size-y="10">
  <description><![CDATA[
This is an OR gate:<br>
<center><img src="resource:///ROBO-INF/doc/or-none-active.png"></center>

<p>When one <b>or</b> both of its inputs are active, its output is active:<br>
<center>
 <img src="resource:///ROBO-INF/doc/or-top-active.png">
 &nbsp;&nbsp;&nbsp;
 <img src="resource:///ROBO-INF/doc/or-bottom-active.png">
 &nbsp;&nbsp;
 <img src="resource:///ROBO-INF/doc/or-both-active.png">
</center>
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBBBRRRRXXX
XXXBBBBBRRRRXXX
XXXBBBBBRRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="OR OR OR" size-x="15" size-y="10">
  <description><![CDATA[
Can you do the 3-way OR?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="2" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="NOT The Same" size-x="15" size-y="10">
  <description><![CDATA[
This is a NOT gate:<br>
<center>
 <img src="resource:///ROBO-INF/doc/not.png">
</center>
When its input is active, its output is inactive (<b>not</b> active). When its input is inactive, its output is active (<b>not</b> inactive).
<center>
 <img src="resource:///ROBO-INF/doc/not-active.png">
  &nbsp;&nbsp;
 <img src="resource:///ROBO-INF/doc/not-inactive.png">
</center>
<pb>
Now what will you do?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="1" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Colour Mixer" size-x="15" size-y="10">
  <description><![CDATA[
When you blend light together, you get different results than when you mix paint.  This is called the "additive colour model."
<p><p>
Can you figure out how it works?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="2" loc-y="2" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XBBBBBBBBBBCCCX
XBBBBBBBBBCCCGX
XBBBBBBBBCCCGGX
XXXXBBBBCCCGGGX
XXXXRRRYYYYGGGX
XRRRRRRRYYYYGGX
XRRRRRRRRYYYYGX
XRRRRRRRRRYYYYX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="White means dance!" size-x="15" size-y="10">
  <description><![CDATA[
This is a placeholder. Need to get actual level from Dallas.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="sw" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="se" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XMMMMMMMMMMMMMX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Colours" size-x="15" size-y="10">
  <description><![CDATA[
Grod can go a bit haywire when you give him conflicting instructions, but he sorts it out eventually.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="AND" value="1" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="8" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XBBBGGGGGGGBBBX
XBMRRYGGGCCCCBX
XBBBGGGGGGGBBBX
XBBBGGGGGGGBBBX
XBBBGGGGGGGBBBX
XBBBGGGGGGGBBBX
XBBBGYRRRRRRMBX
XBBBGGGGGGGBBBX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Colours: The Sequel?" size-x="15" size-y="10">
  <description><![CDATA[
Looks familiar?
<p>
This one's trickier.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="1" />
    </grod>

    <switch id="Cake" loc-x="8" loc-y="4" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XBBBCGGGGGGBBBX
XBRYYYRGGCMMCBX
XBBBCCGGGGGBBBX
XBBBCCCGGGGBBBX
XBBBCCCCGGGBBBX
XBBBCCCCGGGBBBX
XBBBCCCCMRRRCBX
XBBBCCCCCCCBBBX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="TMTOWTDI?" size-x="15" size-y="10">
  <description><![CDATA[
Is there more than one way to do it?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="6.519999980926514" start-y="5.480000019073486" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="4" />
      <gate-allowance type="NOT" value="1" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="5" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X             X
X BBBBBBBBBBY X
X MGGGGGGGGRY X
X MXXXXXRRRRY X
X MCCCCXBB CY X
X MXXXXXMYYYY X
X YYYYYYMCCCC X
X             X
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Latch" size-x="15" size-y="10">
  <description><![CDATA[
There is a very useful construction that you can make with a single OR gate.  You will need to figure it out if you want to get past this level.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="12" loc-y="2" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X             X
X             X
X             X
XXXXXXXXXXX   X
XXXXXXXXXXX   X
XGGGGGGGGGGRRRX
XGGGGGGGGGGGRRX
XGGGGGGGGGGRRRX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Latch More" size-x="15" size-y="10">
  <description><![CDATA[
The name says it all.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="2" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="0" />
    </grod>

    <switch id="Cake" loc-x="12" loc-y="2" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X             X
X             X
X             X
XXXX          X
XXXX          X
XRRR          X
XRRR   B      X
XRRR          X
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Latch Even More" size-x="15" size-y="10">
  <description><![CDATA[
The name still says it all.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="1" />
    </grod>

    <switch id="Cake" loc-x="12" loc-y="2" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X             X
X             X
X             X
XXXXXXXXXXX   X
XXXXXXXXXXX   X
XRRR          X
XRRR        B X
XRRR          X
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="U-Turn" size-x="15" size-y="10">
  <description><![CDATA[
U-Turn permitted on green.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="6.519999980926514" start-y="5.519999980926514" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="2" />
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOT" value="1" />
    </grod>

    <switch id="Cake" loc-x="8" loc-y="5" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X             X
X             X
X     GGG     X
X      X      X
X      X      X
X             X
X             X
X             X
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="The Switcheroo" size-x="15" size-y="10">
  <description><![CDATA[
Wow, that's a lot of gates!
<p>
To make the gates smaller in the circuit editor, just press the - (minus) key on your keyboard. If you want to make them bigger again, press + (plus).
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="1.559999942779541" start-y="8.520000457763672" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="4" />
      <gate-allowance type="AND" value="9" />
      <gate-allowance type="NOT" value="2" />
    </grod>

    <switch id="Cake" loc-x="1" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XGGGGGGGGGGGGYX
XXXXXXXXXXXXXRX
XYRRRRRWBBBBBMX
XYRRRRRWBBBBBMX
XGXXXXXXXXXXXXX
XCBBBBBBBBBBBCX
XXXXXXXXXXXXXGX
XRRRRRRRRRRRRYX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Live on the rising edge" size-x="15" size-y="10">
  <description><![CDATA[
Suddenly feeling blue again?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="1.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="ne" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="AND" value="1" />
      <gate-allowance type="NOT" value="2" />
    </grod>

    <switch id="Cake" loc-x="8" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXGBBXXXXX
XXXXXXXGBBXXXXX
XXXXXXXGBBXXXXX
XXXXXXXGBBXXXXX
XXXXXXXGBBXXXXX
XBBCCCXGBBXBBBX
XBBCCCCGBBBBBBX
XBBCCCCGBBBBBBX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Count to Three" size-x="15" size-y="10">
  <description><![CDATA[
Grod thinks he's a venus fly trap.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="1.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="3" />
      <gate-allowance type="AND" value="3" />
      <gate-allowance type="NOT" value="2" />
    </grod>

    <switch id="Cake" loc-x="8" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXX   XXXXX
XXXXXXX   XXXXX
XXXXXXX   XXXXX
XXXXXXX   XXXXX
XXXXXXX   XXXXX
X     X   X   X
X             X
X   R R R R R X
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Flip/Flop" size-x="15" size-y="10">
  <description><![CDATA[
Now for the biggest challenge.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="1.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="n" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NAND" value="0" />
      <gate-allowance type="OR" value="3" />
      <gate-allowance type="AND" value="2" />
      <gate-allowance type="NOT" value="3" />
    </grod>

    <switch id="Cake" loc-x="1" loc-y="1" on-enter="robot.setGoalReached(true); level.score += 200;" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
X X  G   G    X
X             X
X  R   R      X
XXXX XXX XXX BX
XX XXX XXX X BX
X  G   G      X
X             X
XRX  R   R    X
XXXXXXXXXXXXXXX
    </map>
  </level>
</rocky>
