<?xml version="1.0" encoding="utf-8"?>
<rocky version="4.0">
  <sensor type="Red" />
  <sensor type="Green" />
  <sensor type="Blue" />

  <gate type="AND" mnemonic="a" class="net.bluecow.robot.gate.AndGate" />
  <gate type="NOR" mnemonic="O" class="net.bluecow.robot.gate.NorGate" />
  <gate type="NOT" mnemonic="n" class="net.bluecow.robot.gate.NotGate" />
  <gate type="NAND" mnemonic="A" class="net.bluecow.robot.gate.NandGate" />
  <gate type="OR" mnemonic="o" class="net.bluecow.robot.gate.OrGate" />

  <square type="BLACK" mapchar=" " graphic="ROBO-INF/images/blacktile_glint.rsf">
  </square>
  <square type="MAGENTA" mapchar="M" graphic="ROBO-INF/images/magentatile.png">
    <activate-sensor type="Red" />
    <activate-sensor type="Blue" />
  </square>
  <square type="RED" mapchar="R" graphic="ROBO-INF/images/redtile.png">
    <activate-sensor type="Red" />
  </square>
  <square type="WHITE" mapchar="W" graphic="ROBO-INF/images/whitetile.png">
    <activate-sensor type="Red" />
    <activate-sensor type="Blue" />
    <activate-sensor type="Green" />
  </square>
  <square type="YELLOW" mapchar="Y" graphic="ROBO-INF/images/yellowtile.png">
    <activate-sensor type="Red" />
    <activate-sensor type="Green" />
  </square>
  <square type="CYAN" mapchar="C" graphic="ROBO-INF/images/cyantile.png">
    <activate-sensor type="Blue" />
    <activate-sensor type="Green" />
  </square>
  <square type="BLUE" mapchar="B" graphic="ROBO-INF/images/bluetile.png">
    <activate-sensor type="Blue" />
  </square>
  <square type="GREEN" mapchar="G" graphic="ROBO-INF/images/greentile.png">
    <activate-sensor type="Green" />
  </square>
  <square type="WALL" mapchar="X" graphic="ROBO-INF/images/wall.png">
    <attribute type="WALL" />
  </square>

  <level name="Green means go!" size-x="15" size-y="10">
  <description><![CDATA[
This level should be pretty easy to solve!  Just drag a connection from the correctly coloured sensor input to the correct directional motor output.
<p>
Once you have made your connections, press the Start button.
<p>
To make this message disappear, click on it!
  ]]></description>
    <grod id="grod" step-size="0.1" start-x="3.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="cake" loc-x="11" loc-y="4" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>
    <switch id="test" loc-x="5" loc-y="4" on-enter="playfield.addEffect(new net.bluecow.robot.fx.PointsEarnedEffect(playfield.squarePositionToPoint(robot.getPosition()), 200));" enabled="true" label="200 Points" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/generic_switch.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXGGGGGGGGGXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="On the Diagonal" size-x="15" size-y="10">
  <description><![CDATA[
Ok, this one isn't much harder.  See if you can figure out the trick!
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="n" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="1" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXBBBBBBBBBXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Time to make a decision" size-x="15" size-y="10">
  <description><![CDATA[
Grod has to wake up and make a decision now.  No more mindless
wandering in the same direction all the time!
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="1" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXRRRRRRRRRXXX
XXXBXXXXXRXXXXX
XXXBXXXXXXXXXXX
XXXBBXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXBXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Time to make more decisions" size-x="15" size-y="10">
  <description><![CDATA[
Three directions, one after the other.  Can you handle it?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="3.5" start-y="8.5" evals-per-step="1" label="Grod" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="11" loc-y="8" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXRRRRRRRRGXXX
XXXBXXXXRXXGXXX
XXXBXXXXXXXGXXX
XXXBBXXXXXXGXXX
XXXBXXXXXXXGXXX
XXXBXXXXXXGGXXX
XXXBXXXXXXXGXXX
XXXBXXXXXXXGXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Move right, OR else!" size-x="15" size-y="10">
  <description><![CDATA[
Ok, it's finally time to bring out the gates.  Ok, one gate.  Can you figure out how the OR gate works?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="1" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBBBRRRRXXX
XXXBBBBBRRRRXXX
XXXBBBBBRRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="OR OR OR" size-x="15" size-y="10">
  <description><![CDATA[
Can you do the 3-way OR?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="2" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="NOT The Same as Last Time" size-x="15" size-y="10">
  <description><![CDATA[
Now what will you do?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="4.5" start-y="4.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="1" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="10" loc-y="4" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXBBBGGGRRRXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Colour Mixer" size-x="15" size-y="10">
  <description><![CDATA[
When you blend light together, you get different results than when you mix paint.  This is called the "additive colour model."
<p><p>
Can you figure out how it works?
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="2" loc-y="2" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XBBBBBBBBBBCCCX
XBBBBBBBBBCCCGX
XBBBBBBBBCCCGGX
XXXXBBBBCCCGGGX
XXXXRRRYYYYGGGX
XRRRRRRRYYYYGGX
XRRRRRRRRYYYYGX
XRRRRRRRRRYYYYX
XXXXXXXXXXXXXXX
    </map>
  </level>
  <level name="Testing Zone" size-x="15" size-y="10">
  <description><![CDATA[
This level is for testing and demoing new stuff.
  ]]></description>
    <grod id="Grod" step-size="0.1" start-x="2.5" start-y="7.5" evals-per-step="1" label="Grod" label-direction="w" label-enabled="true">
      <graphic href="ROBO-INF/images/grod/grod.rsf" scale="0.4"/>
      <gate-allowance type="AND" value="0" />
      <gate-allowance type="NOR" value="0" />
      <gate-allowance type="NOT" value="0" />
      <gate-allowance type="OR" value="0" />
      <gate-allowance type="NAND" value="0" />
    </grod>

    <switch id="Cake" loc-x="2" loc-y="2" on-enter="robot.setGoalReached(true); level.increaseScore(200);" enabled="true" label="Cake" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/cake.png" scale="1.0"/>
    </switch>
    <switch id="test" loc-x="5" loc-y="4" on-enter="playfield.addEffect(new net.bluecow.robot.fx.PointsEarnedEffect(playfield.squarePositionToPoint(robot.getPosition()), 200));" enabled="true" label="200 Points" label-direction="s" label-enabled="true">
      <graphic href="ROBO-INF/images/generic_switch.png" scale="1.0"/>
    </switch>
    <switch id="teleport" loc-x="7" loc-y="7" on-enter="playfield.addEffect(new net.bluecow.robot.fx.TeleportEffect(8.5, 5.5, robot, playfield));" enabled="true" label="Teleport" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/generic_switch.png" scale="1.0"/>
    </switch>
    <switch id="teleport2" loc-x="8" loc-y="3" on-enter="playfield.addEffect(new net.bluecow.robot.fx.TeleportEffect(6, 7.5, robot, playfield));" enabled="true" label="Teleport" label-direction="e" label-enabled="true">
      <graphic href="ROBO-INF/images/generic_switch.png" scale="1.0"/>
    </switch>

    <map>
XXXXXXXXXXXXXXX
XGGGWWWWWWWWWWX
XGGGWWWWWWWWWWX
XGGGWYYBBBWWWWX
XWGWYYYBBBWWWWX
XWGYYYWBBBWWWWX
XWYYYWRRRRWWWWX
XWYYRRRRRRWWWWX
XWWWWWRRRRWWWWX
XXXXXXXXXXXXXXX
    </map>
  </level>
</rocky>
